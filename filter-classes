#! /bin/bash

##
#/
#/ @PROGRAM@ can be used to filter a list of Nuffield Health classes
#/ obtained using list-classes.
#/
#/ Usage:
#/
#/ list-classes | @PROGRAM@ [OPTIONS]
#/
#/ OPTIONS:
#/
#/     -n <name_filter> Filter using the name of the class.
#/     -t <time_filter> Filter using the description specified.
#/
#/ Examples:
#/
#/     list-classes -g 1234 -d "2019-01-12" | @PROGRAM@ -n "BODYATTACK"
#/     list-classes -g 1234 -d "2019-01-12" | @PROGRAM@ -n "YOGA" -t "06:35"
#/     list-classes -g 1234 -d "2019-01-12" | @PROGRAM@ -t "06:35"
#/
##

where_am_i="${0%/*}"
source "${where_am_i}/common"

jq_filters=""
addFilter() {
    [[ -z "${jq_filters}" ]] || jq_filters+=" and "
    filter_name="${1}"
    filter_value="${2}"
    jq_filters+="(.${filter_name} | match(\"${filter_value}\"))"
}

name_filter=""
time_filter=""
while getopts "n:t:h" option_name; do
    case $option_name in
        n) name_filter="${OPTARG:-}";;
        t) time_filter="${OPTARG:-}";;
        h) usage;;
    esac
done

[[ -z "${name_filter}" ]] ||
    addFilter "description" "${name_filter}"
[[ -z "${time_filter}" ]] ||
    addFilter "datetime" "${time_filter}"

[[ -n "${jq_filters}" ]] ||
    usage "No filter specified."

result=$(jq "[.[] | select(${jq_filters})]")

[[ "${result}" != "[]" ]] ||
    die "No classes matching the specified filters: '${jq_filters}'."

echo "${result}"
